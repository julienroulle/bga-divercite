/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * Divercite implementation : © <Julien Roullé> <ju.roulle@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * divercite.css
 *
 * Divercite stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (divercite_divercite.tpl), and to HTML elements you create dynamically
    (in divercite.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/

#board {
    width: 700px;
    height: 700px;
    background-size: contain;
    background-image: url('img/game_board.png');
    float: left;
    margin-left: 200px;
}

.square {
    width: 60px;
    height: 60px;
    position: absolute;
    transform: rotate(45deg);
    background-color: rgb(39, 44, 44);
    opacity: 0.8;
}

.piece {
    position: absolute;
    width: 96px;
    height: 96px;
}

.piecebox {
    float: left;
    width: 30%;
    margin: 64px;
    margin-bottom: 0px;
}

.token {
    width: 56px;
    height: 56px;
    position: absolute;
}
.tokencolor_ffffff { 
    background-position: 0px 0px;
    background-color: black;
}
.tokencolor_000000 { 
    background-position: -56px 0px;
    background-color: white;
}
